{"ast":null,"code":"var _jsxFileName = \"/Users/sebastien/DevSDIS/djangoReactAdmin/src/components/dashBoard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport AccountTemplate from './Template/accountTemplate';\nimport AddAccountTemplate from './Template/addAccountTemplate';\nimport Typography from '@material-ui/core/Typography';\nimport axios from \"axios\";\nimport { Button, List, ListItem, ListItemAvatar, ListItemText, Avatar, Paper } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: 'relative'\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1\n  }\n}));\nconst Transition = /*#__PURE__*/React.forwardRef(_c = function Transition(props, ref) {\n  return /*#__PURE__*/_jsxDEV(Slide, {\n    direction: \"up\",\n    ref: ref,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 10\n  }, this);\n});\n_c2 = Transition;\nconst api = {\n  urlGetUser: \"https://dev.geo.sdis67.com/api/v1/public/allUsers\",\n  urlGetCities: \"https://dev.geo.sdis67.com/api/v1/app/erp/cities\"\n};\nexport default function DashBoard(props) {\n  _s();\n\n  const classes = useStyles();\n  const [selectedRow, setSelectedRow] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [apiData, setApiData] = useState(null);\n  const [cities, setCities] = useState(null);\n  const [openAddAccount, setOpenAddAccount] = React.useState(false);\n\n  const getAPIData = async () => {\n    const res = await axios.get(`${api.urlGetUser}`);\n    setApiData(res.data.data);\n  };\n\n  useEffect(() => {\n    console.log(\"getapi\");\n    getAPIData();\n  }, []);\n\n  const getCities = async () => {\n    const res = await axios.get(`${api.urlGetCities}`);\n    setCities(res.data.data.cities);\n  };\n\n  useEffect(() => {\n    console.log(\"getCities\");\n    getCities();\n  }, []);\n  console.warn(\"apirequest\", apiData);\n\n  const handleClickSetDialog = (e, data) => {\n    setOpen(true);\n    setSelectedRow(data);\n  };\n\n  const handleClickOpenAddAccount = () => {\n    setOpenAddAccount(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setOpenAddAccount(false);\n  };\n\n  const [profils, setProfils] = React.useState({\n    username: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    registrationNumber: \"\",\n    cities: [{\n      inseeCode: \"\"\n    }],\n    password: null,\n    company: \"\",\n    territorialUnity: \"\"\n  });\n\n  const handleChangeProfils = event => {\n    if (event.target.name === \"username\") {\n      profils.username = event.target.value;\n    } else if (event.target.name === \"firstName\") {\n      profils.firstName = event.target.value;\n    } else if (event.target.name === \"lastName\") {\n      profils.lastName = event.target.value;\n    } else if (event.target.name === \"email\") {\n      profils.email = event.target.value;\n    } else if (event.target.name === \"registrationNumber\") {\n      profils.registrationNumber = event.target.value;\n    } else if (event.target.name === \"password\") {\n      profils.password = event.target.value;\n    } else if (event.target.name === \"company\") {\n      profils.company = event.target.value;\n    } else if (event.target.name === \"territorialUnity\") {\n      profils.territorialUnity = event.target.value;\n    }\n\n    setProfils(profils);\n  };\n\n  const handleChangeCities = (event, value, reason) => {\n    console.log(\"value\", value);\n    value && value.map(d => profils.cities.push(d.inseeCode));\n    setProfils(profils);\n  };\n\n  const addAcount = /*#__PURE__*/_jsxDEV(AddAccountTemplate, {\n    city: cities,\n    changeProfils: handleChangeProfils,\n    changeCities: handleChangeCities\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n\n  console.warn(\"profils\", profils);\n\n  const postAccount = async () => {\n    console.log(\"postAccount\");\n    await axios.post('https://dev.geo.sdis67.com/api/v1/public/user', profils).then(res => {\n      console.log(res);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [apiData && apiData.map(data => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: e => {\n            handleClickSetDialog(e, data);\n          },\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            variant: \"outlined\",\n            children: /*#__PURE__*/_jsxDEV(List, {\n              dense: true,\n              children: /*#__PURE__*/_jsxDEV(ListItem, {\n                children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    children: \"Nom\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 141,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: `Nom:  ${data.lastName}  ${data.firstName}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 15\n        }, this)]\n      }, data.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }, this);\n    }), selectedRow && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(AccountTemplate, {\n        selectedRow: selectedRow,\n        open: open,\n        onClickClose: handleClose,\n        city: cities,\n        setOpen: setOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: handleClickOpenAddAccount,\n      children: \"Ajouter un profil\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      fullScreen: true,\n      open: openAddAccount,\n      onClose: handleClose,\n      TransitionComponent: Transition,\n      children: [/*#__PURE__*/_jsxDEV(AppBar, {\n        className: classes.appBar,\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            edge: \"start\",\n            color: \"inherit\",\n            onClick: handleClose,\n            \"aria-label\": \"close\",\n            children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            className: classes.title,\n            children: \"Ajout d'un profil\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            autoFocus: true,\n            color: \"inherit\",\n            onClick: postAccount,\n            edge: \"endpoint\",\n            children: \"Sauvegarder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), addAcount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DashBoard, \"b1clP1ab+ze77MXSp5OY8Yc9jnA=\", false, function () {\n  return [useStyles];\n});\n\n_c3 = DashBoard;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Transition$React.forwardRef\");\n$RefreshReg$(_c2, \"Transition\");\n$RefreshReg$(_c3, \"DashBoard\");","map":{"version":3,"sources":["/Users/sebastien/DevSDIS/djangoReactAdmin/src/components/dashBoard.js"],"names":["React","useEffect","useState","makeStyles","Dialog","AppBar","Toolbar","IconButton","CloseIcon","Slide","AccountTemplate","AddAccountTemplate","Typography","axios","Button","List","ListItem","ListItemAvatar","ListItemText","Avatar","Paper","useStyles","theme","appBar","position","title","marginLeft","spacing","flex","Transition","forwardRef","props","ref","api","urlGetUser","urlGetCities","DashBoard","classes","selectedRow","setSelectedRow","open","setOpen","apiData","setApiData","cities","setCities","openAddAccount","setOpenAddAccount","getAPIData","res","get","data","console","log","getCities","warn","handleClickSetDialog","e","handleClickOpenAddAccount","handleClose","profils","setProfils","username","firstName","lastName","email","registrationNumber","inseeCode","password","company","territorialUnity","handleChangeProfils","event","target","name","value","handleChangeCities","reason","map","d","push","addAcount","postAccount","post","then","id"],"mappings":"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","sourcesContent":["import React , {useEffect, useState}from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport AccountTemplate from './Template/accountTemplate';\nimport AddAccountTemplate from './Template/addAccountTemplate';\nimport Typography from '@material-ui/core/Typography';\nimport axios from \"axios\";\nimport {\n  Button,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Avatar,\n  Paper,\n} from \"@material-ui/core\";\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: 'relative',\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst api = {\n  urlGetUser: \"https://dev.geo.sdis67.com/api/v1/public/allUsers\",\n  urlGetCities: \"https://dev.geo.sdis67.com/api/v1/app/erp/cities\"\n};\nexport default function DashBoard(props) {\n  const classes = useStyles();\n  const [selectedRow, setSelectedRow] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [apiData, setApiData]= useState(null);\n  const [cities, setCities]= useState(null);\n  const [openAddAccount, setOpenAddAccount] = React.useState(false);\n\n  const getAPIData = async () => {\n    const res = await axios.get(`${api.urlGetUser}`);\n    setApiData(res.data.data)\n  };\n  useEffect(() => {\n    console.log(\"getapi\");\n    getAPIData();\n  }, []);\n  const getCities = async () => {\n    const res = await axios.get(`${api.urlGetCities}`);\n    setCities(res.data.data.cities);\n  }\n  useEffect(() => {\n    console.log(\"getCities\");\n    getCities();\n  }, []);\n  console.warn(\"apirequest\", apiData);\n  const handleClickSetDialog = (e, data) => {\n    setOpen(true);\n    setSelectedRow(data);\n  };\n  const handleClickOpenAddAccount = () => {\n    setOpenAddAccount(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n    setOpenAddAccount(false);\n  };\n  const [profils, setProfils] = React.useState({\n    username: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    registrationNumber: \"\",\n    cities: [{inseeCode:\"\"}],\n    password: null,\n    company: \"\",\n    territorialUnity: \"\",\n  });\n  const handleChangeProfils = ( event) => {\n    if(event.target.name === \"username\") {\n      profils.username = event.target.value;\n    }else if (event.target.name === \"firstName\"){\n      profils.firstName = event.target.value;\n    }else if(event.target.name === \"lastName\") {\n      profils.lastName = event.target.value;\n    }else if(event.target.name === \"email\"){\n      profils.email= event.target.value;\n    }else if (event.target.name === \"registrationNumber\"){\n      profils.registrationNumber = event.target.value;\n    }else if (event.target.name === \"password\"){\n      profils.password = event.target.value;\n    }else if (event.target.name === \"company\"){\n      profils.company = event.target.value;\n    }else if (event.target.name === \"territorialUnity\"){\n      profils.territorialUnity = event.target.value;\n    }\n    setProfils(profils);\n  };\n  const handleChangeCities =(event, value, reason) => {\n    console.log(\"value\", value);\n    value &&\n    value.map((d)=>\n    profils.cities.push(d.inseeCode)\n    )\n    setProfils(profils);\n\n  }\n  const addAcount = (\n    <AddAccountTemplate city={cities} changeProfils={handleChangeProfils} changeCities={handleChangeCities}/>\n  );\n  console.warn(\"profils\", profils);\n  const postAccount = async ()=> {\n    console.log(\"postAccount\")\n\n    await axios.post('https://dev.geo.sdis67.com/api/v1/public/user', profils).then(res => {\n      console.log(res);})\n  }\n  return (\n    <div>\n      {apiData &&\n        apiData.map((data) => {\n          return (\n            <div key={data.id}>\n              <Button\n                onClick={(e) => {\n                handleClickSetDialog(e, data);\n                }}\n              >\n                <Paper variant=\"outlined\">\n                  <List dense>\n                    <ListItem >\n                      <ListItemAvatar>\n                        <Avatar>Nom</Avatar>\n                      </ListItemAvatar>\n                      <ListItemText primary={`Nom:  ${data.lastName}  ${data.firstName}`} />\n                    </ListItem>\n                  </List>\n                </Paper>\n              </Button>\n              <br/>\n            </div>\n          );\n      })}\n      {selectedRow && (\n        <div>\n          <AccountTemplate\n            selectedRow={selectedRow}\n            open={open}\n            onClickClose={handleClose}\n            city={cities}\n            setOpen={setOpen}\n\n          />\n        </div>\n      )}\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpenAddAccount}>\n        Ajouter un profil\n      </Button>\n      <Dialog fullScreen open={openAddAccount} onClose={handleClose} TransitionComponent={Transition}>\n        <AppBar className={classes.appBar}>\n          <Toolbar>\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n              <CloseIcon />\n            </IconButton>\n            <Typography variant=\"h6\" className={classes.title}>\n              Ajout d'un profil\n            </Typography>\n            <Button autoFocus color=\"inherit\" onClick={postAccount} edge=\"endpoint\">\n              Sauvegarder\n            </Button>\n          </Toolbar>\n        </AppBar>\n        {addAcount}\n      </Dialog>\n      \n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}