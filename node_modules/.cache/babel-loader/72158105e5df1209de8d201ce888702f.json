{"ast":null,"code":"var _jsxFileName = \"/Users/sebastien/DevSDIS/djangoReactAdmin/djangoreactadmin/src/components/Template/test.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  button: {\n    marginRight: theme.spacing(1)\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  }\n}));\n\nfunction getSteps() {\n  return ['Modifier les informations', 'modifier le mot de passe'];\n}\n\nfunction getStepContent(step, selectedRow) {\n  switch (step) {\n    case 0:\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"firstName\",\n            name: \"fistName\",\n            label: \"Pr\\xE9nom\",\n            fullWidth: true,\n            variant: \"outlined\",\n            value: selectedRow.firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"lastName\",\n            name: \"lastName\",\n            label: \"Nom\",\n            variant: \"outlined\",\n            value: selectedRow.lastName,\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"eMail\",\n            name: \"eMail\",\n            label: \"Email\",\n            variant: \"outlined\",\n            value: selectedRow.email,\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this);\n\n    case 1:\n      /*#__PURE__*/\n      _jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"PWD1\",\n            name: \"PWD1\",\n            label: \"changer de mot de passe\",\n            variant: \"outlined\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"PWD1\",\n            name: \"PWD1\",\n            label: \"changer de mot de passe\",\n            variant: \"outlined\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"PWD2\",\n            name: \"PWD2\",\n            label: \"confirme nouveau mot de passe\",\n            variant: \"outlined\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this);\n\n      break;\n\n    default:\n      return null;\n  }\n}\n\nexport default function HorizontalLinearStepper(props) {\n  _s();\n\n  const {\n    selectedRow\n  } = props;\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [skipped, setSkipped] = React.useState(new Set());\n  const steps = getSteps();\n\n  const isStepOptional = step => {\n    return step === 1;\n  };\n\n  const isStepSkipped = step => {\n    return skipped.has(step);\n  };\n\n  const handleNext = () => {\n    let newSkipped = skipped;\n\n    if (isStepSkipped(activeStep)) {\n      newSkipped = new Set(newSkipped.values());\n      newSkipped.delete(activeStep);\n    }\n\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    setSkipped(newSkipped);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleSkip = () => {\n    if (!isStepOptional(activeStep)) {\n      // You probably want to guard against something like this,\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    setSkipped(prevSkipped => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Stepper, {\n      activeStep: activeStep,\n      children: steps.map((label, index) => {\n        const stepProps = {};\n        const labelProps = {};\n\n        if (isStepOptional(index)) {\n          labelProps.optional = /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            children: \"Optional\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 35\n          }, this);\n        }\n\n        if (isStepSkipped(index)) {\n          stepProps.completed = false;\n        }\n\n        return /*#__PURE__*/_jsxDEV(Step, { ...stepProps,\n          children: /*#__PURE__*/_jsxDEV(StepLabel, { ...labelProps,\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this)\n        }, label, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: activeStep === steps.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.instructions,\n          children: \"All steps completed - you're finished\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleReset,\n          className: classes.button,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.instructions,\n          children: getStepContent(activeStep, selectedRow)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            disabled: activeStep === 0,\n            onClick: handleBack,\n            className: classes.button,\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this), isStepOptional(activeStep) && /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleSkip,\n            className: classes.button,\n            children: \"Skip\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleNext,\n            className: classes.button,\n            children: activeStep === steps.length - 1 ? 'Finish' : 'Next'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HorizontalLinearStepper, \"aJUD1D1H2rPGWFuSD9z2Ae7+Ypg=\", false, function () {\n  return [useStyles];\n});\n\n_c = HorizontalLinearStepper;\n\nvar _c;\n\n$RefreshReg$(_c, \"HorizontalLinearStepper\");","map":{"version":3,"sources":["/Users/sebastien/DevSDIS/djangoReactAdmin/djangoreactadmin/src/components/Template/test.js"],"names":["React","makeStyles","Stepper","Step","StepLabel","Button","Typography","Grid","TextField","useStyles","theme","root","width","button","marginRight","spacing","instructions","marginTop","marginBottom","getSteps","getStepContent","step","selectedRow","firstName","lastName","email","HorizontalLinearStepper","props","classes","activeStep","setActiveStep","useState","skipped","setSkipped","Set","steps","isStepOptional","isStepSkipped","has","handleNext","newSkipped","values","delete","prevActiveStep","handleBack","handleSkip","Error","prevSkipped","add","handleReset","map","label","index","stepProps","labelProps","optional","completed","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  button: {\n    marginRight: theme.spacing(1),\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nfunction getSteps() {\n  return ['Modifier les informations', 'modifier le mot de passe'];\n}\n\nfunction getStepContent(step, selectedRow) {\n    \n  switch (step) {\n    case 0:\n      return (\n            <Grid container spacing={3}>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    id=\"firstName\"\n                    name=\"fistName\"\n                    label=\"Prénom\"\n                    fullWidth\n                    variant=\"outlined\"\n                    value={selectedRow.firstName}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    id=\"lastName\"\n                    name=\"lastName\"\n                    label=\"Nom\"\n                    variant=\"outlined\"\n                    value={selectedRow.lastName}\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                    id=\"eMail\"\n                    name=\"eMail\"\n                    label=\"Email\"\n                    variant=\"outlined\"\n                    value={selectedRow.email}\n                    fullWidth\n                    />\n                </Grid>\n            </Grid>\n      );\n    case 1: (\n        <div>\n            <Grid item xs={12} sm={6}>\n                <TextField\n                    id=\"PWD1\"\n                    name=\"PWD1\"\n                    label=\"changer de mot de passe\"\n                    variant=\"outlined\"\n                    fullWidth\n                />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n                <TextField\n                    id=\"PWD1\"\n                    name=\"PWD1\"\n                    label=\"changer de mot de passe\"\n                    variant=\"outlined\"\n                    fullWidth\n                />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n                <TextField\n                    id=\"PWD2\"\n                    name=\"PWD2\"\n                    label=\"confirme nouveau mot de passe\"\n                    variant=\"outlined\"\n                    fullWidth\n                />\n            </Grid>\n        </div>\n    );\n    break;\n    default: return null;\n    \n  }\n}\n\nexport default function HorizontalLinearStepper(props) {\n    const {selectedRow} = props;\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [skipped, setSkipped] = React.useState(new Set());\n  const steps = getSteps();\n\n  const isStepOptional = (step) => {\n    return step === 1;\n  };\n\n  const isStepSkipped = (step) => {\n    return skipped.has(step);\n  };\n\n  const handleNext = () => {\n    let newSkipped = skipped;\n    if (isStepSkipped(activeStep)) {\n      newSkipped = new Set(newSkipped.values());\n      newSkipped.delete(activeStep);\n    }\n\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    setSkipped(newSkipped);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleSkip = () => {\n    if (!isStepOptional(activeStep)) {\n      // You probably want to guard against something like this,\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    setSkipped((prevSkipped) => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Stepper activeStep={activeStep}>\n        {steps.map((label, index) => {\n          const stepProps = {};\n          const labelProps = {};\n          if (isStepOptional(index)) {\n            labelProps.optional = <Typography variant=\"caption\">Optional</Typography>;\n          }\n          if (isStepSkipped(index)) {\n            stepProps.completed = false;\n          }\n          return (\n            <Step key={label} {...stepProps}>\n              <StepLabel {...labelProps}>{label}</StepLabel>\n            </Step>\n          );\n        })}\n      </Stepper>\n      <div>\n        {activeStep === steps.length ? (\n          <div>\n            <Typography className={classes.instructions}>\n              All steps completed - you&apos;re finished\n            </Typography>\n            <Button onClick={handleReset} className={classes.button}>\n              Reset\n            </Button>\n          </div>\n        ) : (\n          <div>\n            <Typography className={classes.instructions}>{getStepContent(activeStep, selectedRow)}</Typography>\n            <div>\n              <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\n                Back\n              </Button>\n              {isStepOptional(activeStep) && (\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={handleSkip}\n                  className={classes.button}\n                >\n                  Skip\n                </Button>\n              )}\n\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={handleNext}\n                className={classes.button}\n              >\n                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n              </Button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}