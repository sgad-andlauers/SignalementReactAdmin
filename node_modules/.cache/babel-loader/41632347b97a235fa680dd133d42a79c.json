{"ast":null,"code":"var _jsxFileName = \"/Users/sebastien/DevSDIS/djangoReactAdmin/src/components/Template/addAccountTemplate.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Container from '@material-ui/core/Container';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddAccountTemplate(props) {\n  _s();\n\n  const {\n    city\n  } = props;\n  const [identity, setIdentity] = React.useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    registrationNumber: \"\",\n    cities: null,\n    password: null\n  });\n\n  const handleChangeIdentity = event => {\n    if (event.target.name === \"firstName\") {\n      identity.firstName = event.target.value;\n    } else if (event.target.name === \"lastName\") {\n      identity.lastName = event.target.value;\n    } else if (event.target.name === \"email\") {\n      identity.email = event.target.value;\n    } else if (event.target.name === \"registrationNumber\") {\n      identity.registrationNumber = event.target.value;\n    } else if (event.target.name === \"password\") {\n      identity.password = event.target.value;\n    }\n\n    setIdentity(identity);\n  };\n\n  const handleChangeCities = (event, value, reason) => {\n    identity.cities = value;\n    setIdentity(identity);\n  };\n\n  console.warn(\"identity\", identity);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"xl\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        gutterBottom: true,\n        children: \"Informations personnelles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            id: \"firstName\",\n            name: \"firstName\",\n            label: \"Pr\\xE9nom\",\n            fullWidth: true,\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            id: \"lastName\",\n            name: \"lastName\",\n            label: \"Nom\",\n            fullWidth: true,\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            id: \"email\",\n            name: \"email\",\n            label: \"Email\",\n            variant: \"outlined\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            id: \"password\",\n            name: \"password\",\n            label: \"Mot de passe\",\n            fullWidth: true,\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"confirmPassword\",\n            name: \"confirmPassword\",\n            label: \"confirme ton mot de passe\",\n            variant: \"outlined\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n            multiple: true,\n            id: \"cities\",\n            name: \"cities\",\n            options: city,\n            getOptionLabel: option => option.name,\n            onChange: (event, value, reason) => {\n              handleChangeCities(event, value, reason);\n            },\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n              variant: \"outlined\",\n              label: \"Villes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddAccountTemplate, \"VoEZJmhqScevm6+410EYKNVUKEY=\");\n\n_c = AddAccountTemplate;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddAccountTemplate\");","map":{"version":3,"sources":["/Users/sebastien/DevSDIS/djangoReactAdmin/src/components/Template/addAccountTemplate.js"],"names":["React","Grid","Typography","TextField","Autocomplete","Container","AddAccountTemplate","props","city","identity","setIdentity","useState","firstName","lastName","email","registrationNumber","cities","password","handleChangeIdentity","event","target","name","value","handleChangeCities","reason","console","warn","option","params"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Container from '@material-ui/core/Container';\n\nexport default function AddAccountTemplate(props) {\n  const { city } = props;\n  const [identity, setIdentity] = React.useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    registrationNumber: \"\",\n    cities: null,\n    password: null,\n  });\n  const handleChangeIdentity = ( event) => {\n    if(event.target.name === \"firstName\") {\n      identity.firstName = event.target.value;\n    } else if(event.target.name === \"lastName\") {\n      identity.lastName = event.target.value;\n    }else if(event.target.name === \"email\"){\n      identity.email= event.target.value;\n    }else if (event.target.name === \"registrationNumber\"){\n      identity.registrationNumber = event.target.value;\n    }else if (event.target.name === \"password\"){\n      identity.password = event.target.value;\n    }\n    setIdentity(identity);\n  };\n  const handleChangeCities =(event, value, reason) => {\n    identity.cities = value;\n    setIdentity(identity);\n\n  }\n  console.warn(\"identity\", identity)\n  return (\n    <React.Fragment>\n      <Container maxWidth=\"xl\">\n      <Typography variant=\"subtitle1\" gutterBottom>\n        Informations personnelles\n        </Typography>\n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              required\n              id=\"firstName\"\n              name=\"firstName\"\n              label=\"Prénom\"\n              fullWidth\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              required\n              id=\"lastName\"\n              name=\"lastName\"\n              label=\"Nom\"\n              fullWidth\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              required\n              id=\"email\"\n              name=\"email\"\n              label=\"Email\"\n              variant=\"outlined\"\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              required\n              id=\"password\"\n              name=\"password\"\n              label=\"Mot de passe\"\n              fullWidth\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <TextField id=\"confirmPassword\" name=\"confirmPassword\" label=\"confirme ton mot de passe\" variant=\"outlined\"fullWidth />\n          </Grid>\n          <Grid item xs={12} >\n            <Autocomplete\n              multiple\n              id=\"cities\"\n              name=\"cities\"\n              options={city}\n              getOptionLabel={(option) => option.name}\n              onChange={(event, value, reason)=>{handleChangeCities(event, value, reason)}}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  variant=\"outlined\"\n                  label=\"Villes\"\n                />\n              )}\n            />\n          </Grid>\n        </Grid>\n      </Container>\n    </React.Fragment>\n  );\n}"]},"metadata":{},"sourceType":"module"}